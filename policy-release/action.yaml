name: 'kubewarden-policy-release'
description: 'Release a Kubewarden policy'
branding:
  icon: 'package'
  color: 'blue'
inputs:
  annotated-wasm:
    description: 'name of the annotated wasm file'
    required: false
    default: annotated-policy.wasm
  oci-target:
    required: true
    type: string
  workflow-pat:
    required: false
    type: string
    default: ""
  GITHUB_TOKEN:
    required: true
    type: string
  actions-id-token-request-token:
    required: true
    type: string
runs:
  using: "composite"
  steps:
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ inputs.GITHUB_TOKEN }}
    -
      name: Publish Wasm policy artifact to OCI registry with the 'latest' tag
      shell: bash
      if: ${{ startsWith(github.ref, 'refs/heads/') }}
      env:
        COSIGN_EXPERIMENTAL: 1
      run: |
        set -ex
        echo Pushing policy to OCI container registry
        IMMUTABLE_REF=$(kwctl push -o json ${{ inputs.annotated-wasm }} ${{ inputs.oci-target }}:latest | jq -r .immutable_ref)

        echo Keyless signing of policy using cosign token ${{ inputs.actions-id-token-request-token }}
        IDENTITY_TOKEN=$(curl -H "Authorization: bearer ${{ inputs.actions-id-token-request-token }}" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq -r '.value')
        cosign sign ${IMMUTABLE_REF} --identity-token $IDENTITY_TOKEN
    -
      name: Publish Wasm policy artifact to OCI registry with the version tag and 'latest'
      shell: bash
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      env:
        COSIGN_EXPERIMENTAL: 1
      run: |
        set -ex
        export OCI_TAG=$(echo $GITHUB_REF | sed -e "s|refs/tags/||")

        echo Pushing policy to OCI container registry
        IMMUTABLE_REF=$(kwctl push -o json ${{ inputs.annotated-wasm }} ${{ inputs.oci-target }}:${OCI_TAG} | jq -r .immutable_ref)

        echo HERE!!  ${{ inputs.actions-id-token-request-token }} Keyless signing of policy using cosign
        IDENTITY_TOKEN=$(curl -H "Authorization: bearer ${{ inputs.actions-id-token-request-token }}" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange" | jq -r '.value')
        cosign sign ${IMMUTABLE_REF} --identity-token $IDENTITY_TOKEN
    -
      name: Create Release
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: ${{ contains(github.ref, '-alpha') || contains(github.ref, '-beta') || contains(github.ref, '-rc') }}
    -
      name: Upload Release Asset
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ inputs.annotated-wasm }}
        asset_name: policy.wasm
        asset_content_type: application/wasm
    -
      name: Notify policy-hub
      if: ${{ inputs.workflow-pat != '' && startsWith(github.ref, 'refs/tags/') && !(contains(github.ref, '-alpha') || contains(github.ref, '-beta') || contains(github.ref, '-rc')) }}
      uses: kubewarden/notify-policy-hub@main
      with:
        USERNAME: chimera-kube-bot
        PAT: ${{ inputs.workflow-pat }}
